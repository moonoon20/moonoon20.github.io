{
    "version": "https://jsonfeed.org/version/1",
    "title": "月のブログ",
    "subtitle": "时光如白驹过隙",
    "icon": "https://mo-onstudy.com/images/favicon.ico",
    "description": "",
    "home_page_url": "https://mo-onstudy.com",
    "items": [
        {
            "id": "https://mo-onstudy.com/2021/12/31/redis%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/",
            "url": "https://mo-onstudy.com/2021/12/31/redis%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE/",
            "title": "redis未授权访问",
            "date_published": "2021-12-31T05:59:06.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>前几日配置爬虫 IP 代理池时安装了 redis，今天在使用 goby 又扫描到一个 redis 未授权访问漏洞，不敢深入挖掘，所以记录一下在靶场环境的复现过程</p>\n<h2 id=\"环境介绍\"><a class=\"anchor\" href=\"#环境介绍\">#</a> 环境介绍</h2>\n<p>攻击机器：<span class=\"kbd red\">macOS</span></p>\n<p>攻击 IP：<span class=\"kbd red\">192.168.1.8</span></p>\n<p>目标机器：<span class=\"kbd red\">centos7</span></p>\n<p>目标 IP：<span class=\"kbd red\">192.168.1.16</span></p>\n<h2 id=\"复现步骤\"><a class=\"anchor\" href=\"#复现步骤\">#</a> 复现步骤</h2>\n<h3 id=\"靶场搭建\"><a class=\"anchor\" href=\"#靶场搭建\">#</a> 靶场搭建</h3>\n<p>在<span class=\"kbd red\"> centos7</span> 使用 [<span class=\"exturl\" data-url=\"aHR0cHM6Ly92dWxodWIub3JnLw==\">vulhub</span>]{.kbd .red} 搭建<span class=\"kbd red\"> redis 未授权访问</span>漏洞环境</p>\n<h3 id=\"复现步骤-2\"><a class=\"anchor\" href=\"#复现步骤-2\">#</a> 复现步骤</h3>\n<p>使用 nmap 查询信息</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nmap -A -p <span class=\"token number\">6379</span> --script<span class=\"token operator\">=</span>redis-info <span class=\"token number\">192.168</span>.1.16</pre></td></tr></table></figure><p>显示脚本运行错误</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/moonoon20/images@main/uPic/image-20211231141352688.png\" alt=\"image-20211231141352688\" /></p>\n<p>根据<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25tYXAvbm1hcC9pc3N1ZXMvMjI5Ng==\">大佬的解决方法</span>修改 redis-info.nes 脚本第 139 行</p>\n<pre><code class=\"language-scripts\">for _, item in ipairs(restab) do\n\tlocal ip = item:match(&quot;addr=%[?([0-9a-f:.]+)%]?:[0-9]+ &quot;)\n\tif not item or 0 == #item then \n\t\tbreak\n\tend\n\tclient_ips[ip] = true;\nend\n</code></pre>\n<p>脚本运行成功</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/moonoon20/images@main/uPic/image-20211231141757800.png\" alt=\"image-20211231141757800\" /></p>\n<p>使用 redis-cli 连接目标机器的 redis 数据库</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /usr/local/redis/bin</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>./redis-cli -h <span class=\"token number\">192.168</span>.1.16</pre></td></tr></table></figure><p><img data-src=\"https://cdn.jsdelivr.net/gh/moonoon20/images@main/uPic/image-20211231143204723.png\" alt=\"image-20211231143204723\" /></p>\n<p>附 攻击者常用命令</p>\n<pre><code>info                       \t\t\t查看信息     \nflushall                 \t \t\t\t删除所有数据库内容：\nflushdb                   \t\t\t刷新数据库\n看所有键：KEYS *，使用select num  可以查看键值数据。\nset test &quot;who am i&quot;        \t\t\t设置变量\nconfig set dir dirpath     \t\t\t设置路径等配置\nconfig get dir/dbfilename  \t\t\t获取路径及数据配置信息\nsave                       \t\t\t保存\nget                        \t\t\t变量，查看变量名称\n</code></pre>\n<p>遇到的错误</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 错误</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data <span class=\"token builtin class-name\">set</span> are disabled, because this instance is configured to report errors during writes <span class=\"token keyword\">if</span> RDB snapshotting fails <span class=\"token punctuation\">(</span>stop-writes-on-bgsave-error option<span class=\"token punctuation\">)</span>. Please check the Redis logs <span class=\"token keyword\">for</span> details about the RDB error</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 解决</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>config <span class=\"token builtin class-name\">set</span> stop-writes-on-bgsave-error no</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 错误</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>READONLY You can't <span class=\"token function\">write</span> against a <span class=\"token builtin class-name\">read</span> only slave </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 解决</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>config <span class=\"token builtin class-name\">set</span> slave-read-only no</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 查看</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>config get slave-read-only</pre></td></tr></table></figure>",
            "tags": [
                "redis",
                "未授权访问",
                "漏洞复现"
            ]
        }
    ]
}